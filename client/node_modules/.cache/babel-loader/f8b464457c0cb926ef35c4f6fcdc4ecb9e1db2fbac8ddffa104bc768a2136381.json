{"ast":null,"code":"var _jsxFileName = \"D:\\\\skillza\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// 1. Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// 2. Create the provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Function to set the token for all future axios requests\n  const setAuthToken = token => {\n    if (token) {\n      axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n      delete axios.defaults.headers.common['x-auth-token'];\n    }\n  };\n\n  // Check for a token and load the user when the app starts\n  useEffect(() => {\n    const loadUser = async () => {\n      if (token) {\n        setAuthToken(token);\n        try {\n          const res = await axios.get('http://localhost:5000/api/auth/me');\n          setUser(res.data);\n        } catch (err) {\n          // If token is invalid, remove it\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    loadUser();\n  }, [token]);\n\n  // Login function\n  const login = async (email, password) => {\n    const res = await axios.post('http://localhost:5000/api/auth/login', {\n      email,\n      password\n    });\n    localStorage.setItem('token', res.data.token);\n    setToken(res.data.token);\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n\n  // The value provided to all children components\n  const contextValue = {\n    token,\n    user,\n    loading,\n    login,\n    logout,\n    setUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","setAuthToken","defaults","headers","common","loadUser","res","get","data","err","removeItem","login","email","password","post","setItem","logout","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/skillza/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// 1. Create the context\r\nconst AuthContext = createContext();\r\n\r\n// 2. Create the provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Function to set the token for all future axios requests\r\n  const setAuthToken = (token) => {\r\n    if (token) {\r\n      axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n      delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n  };\r\n\r\n  // Check for a token and load the user when the app starts\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      if (token) {\r\n        setAuthToken(token);\r\n        try {\r\n          const res = await axios.get('http://localhost:5000/api/auth/me');\r\n          setUser(res.data);\r\n        } catch (err) {\r\n          // If token is invalid, remove it\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n    loadUser();\r\n  }, [token]);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    const res = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n    localStorage.setItem('token', res.data.token);\r\n    setToken(res.data.token);\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  // The value provided to all children components\r\n  const contextValue = {\r\n    token,\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    setUser,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMiB,YAAY,GAAIN,KAAK,IAAK;IAC9B,IAAIA,KAAK,EAAE;MACTT,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAGT,KAAK;IACvD,CAAC,MAAM;MACL,OAAOT,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC;IACtD;EACF,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACd,MAAMoB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAIV,KAAK,EAAE;QACTM,YAAY,CAACN,KAAK,CAAC;QACnB,IAAI;UACF,MAAMW,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,mCAAmC,CAAC;UAChEb,OAAO,CAACY,GAAG,CAACE,IAAI,CAAC;QACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZ;UACAZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;UAChCd,QAAQ,CAAC,IAAI,CAAC;QAChB;MACF;MACAI,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IACDK,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMgB,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAMP,GAAG,GAAG,MAAMpB,KAAK,CAAC4B,IAAI,CAAC,sCAAsC,EAAE;MAAEF,KAAK;MAAEC;IAAS,CAAC,CAAC;IACzFhB,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAET,GAAG,CAACE,IAAI,CAACb,KAAK,CAAC;IAC7CC,QAAQ,CAACU,GAAG,CAACE,IAAI,CAACb,KAAK,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMqB,MAAM,GAAGA,CAAA,KAAM;IACnBnB,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChCd,QAAQ,CAAC,IAAI,CAAC;IACdF,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;;EAED;EACA,MAAMuB,YAAY,GAAG;IACnBtB,KAAK;IACLF,IAAI;IACJM,OAAO;IACPY,KAAK;IACLK,MAAM;IACNtB;EACF,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAA1B,QAAA,EACvC,CAACQ,OAAO,IAAIR;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAC/B,EAAA,CA9DWF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAgEzB,eAAeD,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}